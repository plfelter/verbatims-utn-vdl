#!/bin/bash

# Deployment script to install the app on a remote server and start to serve it
# Prerequisite: ensure the client computer has its public key on the remote deployment server

SSH_PORT="58734"
SSH_USER="ubuntu"
SSH_HOST="162.19.242.144"
GITHUB_REPO="https://github.com/plfelter/verbatims-utn-vdl.git"
REMOTE_REPO_DIR="/home/ubuntu/verbatims-utn-vdl"
LOCAL_DOCKER_INSTALL_SCRIPT_PATH="$HOME/dv/verbatims-utn-vdl/scripts/install-docker-ubuntu"
REMOTE_DOCKER_INSTALL_SCRIPT_PATH="/tmp/install-docker-ubuntu"
HOST_PORT="80"
CONTAINER_PORT="5001"
DOCKER_IMAGE_NAME="verbatims-utn-vdl-image"
DOCKER_CONTAINER_NAME="verbatims-utn-vdl-container"
DOCKER_APP_DB_PATH="/verbatims-utn-vdl-app/app/sqlite.db"
DOCKER_TMP_BACKUP_DB_PATH="/tmp/verbatims-utn-vdl-$(date +"%Y%m%d_%H%M%S")-sqlite.db"
LOCAL_BACKUP_DB_PATH="$HOME/dv/verbatims-utn-vdl/db-backups/"

HOST="$SSH_USER@$SSH_HOST"

# Remotely install docker if not available
scp -P $SSH_PORT "$LOCAL_DOCKER_INSTALL_SCRIPT_PATH" $HOST:$REMOTE_DOCKER_INSTALL_SCRIPT_PATH
ssh -p $SSH_PORT $HOST "bash $REMOTE_DOCKER_INSTALL_SCRIPT_PATH"

# Remotely clone repo
ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "if [ -d $REMOTE_REPO_DIR ]; then rm -rf $REMOTE_REPO_DIR; echo 'Removed existing repository directory'; else echo 'Repository directory does not exist'; fi"
ssh -p $SSH_PORT $HOST "git clone $GITHUB_REPO"

# Remotely save database
ssh -p $SSH_PORT $HOST "docker cp $DOCKER_CONTAINER_NAME:$DOCKER_APP_DB_PATH $DOCKER_TMP_BACKUP_DB_PATH"
scp -p -P $SSH_PORT $HOST:"$DOCKER_TMP_BACKUP_DB_PATH" "$LOCAL_BACKUP_DB_PATH"

# Remotely stop running docker image
ssh -p $SSH_PORT $HOST "docker stop $DOCKER_CONTAINER_NAME"
ssh -p $SSH_PORT $HOST "docker rm $DOCKER_CONTAINER_NAME"

# Remotely build docker image and run it
ssh -p $SSH_PORT $HOST "docker build -t $DOCKER_IMAGE_NAME $REMOTE_REPO_DIR"
ssh -p $SSH_PORT $HOST "docker run -p $HOST_PORT:$CONTAINER_PORT --name $DOCKER_CONTAINER_NAME $DOCKER_IMAGE_NAME"

# TODO Put back saved database
